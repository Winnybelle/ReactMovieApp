{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WINNIFRED\\\\reactmovieapp\\\\ReactMovieApp\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport './index.css';\nimport Movie from './Components/Movie';\nimport { useState, useEffect } from 'react'; // import { useMediaPredicate } from \"react-media-hook\";\n//TMDB API Data fetched with generated API Key. Note Comedy Genre = 35\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/discover/movie?api_key=842d504b316030c6fe5b8b42793b3cf9&with_genres=35\"; // type Props = {\n//   title: string;\n//   vote_average: number;\n// }\n\nfunction App() {\n  _s();\n\n  //arrays and variables in hook format\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [dataSource, setDataSource] = useState([]);\n  const [Rating, setRating] = useState(''); //Get JSON data from API using API Key\n\n  useEffect(() => {\n    fetch(SEARCH_API).then(res => res.json()).then(data => {\n      console.log(data);\n      setMovies(data.results);\n      setDataSource(data.results);\n    });\n  }, []); //Movie search field filter submit event handler\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    let ndata = dataSource.filter(data => data.title.toLowerCase() === searchTerm.toLowerCase());\n    console.log(ndata);\n    setMovies(ndata);\n  }; //Movie search field on change event handler\n\n\n  const handleOnChange = e => {\n    setSearchTerm(e.target.value);\n    let ndata = dataSource.filter(data => data.title.toLowerCase() === searchTerm.toLowerCase());\n    console.log(ndata);\n    setMovies(ndata);\n  }; // Sort by vote rating order\n\n\n  const handleRatingOnChange = e => {\n    setRating(e.target.value);\n\n    if (e.target.value === 'Ascending') {\n      dataSource.sort(function (a, b) {\n        return a.vote_average - b.vote_average;\n      });\n    } else if (e.target.value === 'Descending') {\n      dataSource.sort(function (a, b) {\n        return b.vote_average - a.vote_average;\n      });\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search\",\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: searchTerm,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sorting\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleRatingOnChange,\n            style: {\n              width: 200,\n              height: 40,\n              borderRadius: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              selected: true,\n              children: \"sorting...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Descending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: movies.length > 0 && movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, { ...movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"GrnW3HQhDGVmrxKP8BmGqFpLYuk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/WINNIFRED/reactmovieapp/ReactMovieApp/src/App.tsx"],"names":["React","Movie","useState","useEffect","SEARCH_API","App","movies","setMovies","searchTerm","setSearchTerm","dataSource","setDataSource","Rating","setRating","fetch","then","res","json","data","console","log","results","handleOnSubmit","e","preventDefault","ndata","filter","title","toLowerCase","handleOnChange","target","value","handleRatingOnChange","sort","a","b","vote_average","width","height","borderRadius","length","map","movie","id"],"mappings":"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","sourcesContent":["import * as React from \"react\"\r\nimport './index.css';\r\nimport Movie from './Components/Movie';\r\nimport {useState, useEffect} from 'react'\r\n// import { useMediaPredicate } from \"react-media-hook\";\r\n\r\n\r\n//TMDB API Data fetched with generated API Key. Note Comedy Genre = 35\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/discover/movie?api_key=842d504b316030c6fe5b8b42793b3cf9&with_genres=35\";\r\n\r\n\r\n// type Props = {\r\n//   title: string;\r\n//   vote_average: number;\r\n// }\r\n\r\nfunction App() {\r\n\r\n  //arrays and variables in hook format\r\n  const [movies, setMovies] = useState<any[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [dataSource, setDataSource] = useState<any[]>([]);\r\n  const [Rating, setRating] = useState('');\r\n\r\n  \r\n  //Get JSON data from API using API Key\r\n    useEffect(() => {\r\n      fetch(SEARCH_API).then(res => res.json())\r\n      .then(data =>{\r\n        console.log(data);\r\n        setMovies(data.results);\r\n        setDataSource(data.results);\r\n      })\r\n\r\n  }, [])\r\n\r\n//Movie search field filter submit event handler\r\nconst handleOnSubmit = (e: { preventDefault: () => void; }) => {\r\n  e.preventDefault();\r\n\r\n      let ndata  = dataSource.filter(data => data.title.toLowerCase() === searchTerm.toLowerCase())\r\n      console.log(ndata);\r\n      setMovies(ndata)\r\n};\r\n\r\n//Movie search field on change event handler\r\nconst handleOnChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\r\n  setSearchTerm(e.target.value);\r\n      let ndata = dataSource.filter(data => data.title.toLowerCase() === searchTerm.toLowerCase())\r\n      console.log(ndata);\r\n      setMovies(ndata);\r\n}\r\n\r\n// Sort by vote rating order\r\nconst handleRatingOnChange = (e: { target: { value: React.SetStateAction<string>; }; }) =>{\r\n  setRating(e.target.value);\r\n  if (e.target.value === 'Ascending'){\r\n      dataSource.sort(function (a, b) {return a.vote_average - b.vote_average})\r\n   } else if (e.target.value === 'Descending'){\r\n      dataSource.sort(function (a, b) {return b.vote_average - a.vote_average})\r\n   } else{\r\n\r\n   }\r\n}\r\n  \r\nreturn (\r\n   <>\r\n    <header>\r\n {/* Filter movie search field container */}\r\n      <form onSubmit={handleOnSubmit}>\r\n        <input \r\n          className=\"search\" \r\n          type=\"text\" \r\n          placeholder=\"Search...\"\r\n          value = {searchTerm}\r\n          onChange={handleOnChange}\r\n        />\r\n     \r\n      {/*  Rating Sort field container*/}\r\n      <div className = \"sorting\">\r\n      <label>Rating</label>\r\n       <select onChange={handleRatingOnChange}  style={{width:200, height:40, borderRadius:3}}>\r\n          <option value=\"\" disabled selected>sorting...</option>\r\n          <option>Ascending</option>\r\n          <option>Descending</option>\r\n          </select>\r\n     </div>\r\n      </form>\r\n     </header>\r\n\r\n{/* links to all container for parameters in the view */}\r\n    <div className=\"movie-container\">\r\n        {movies.length > 0 && \r\n        movies.map((movie) => <Movie key = \r\n        {movie.id} {...movie}/>)}\r\n    </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}